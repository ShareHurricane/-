html注释
<!--在此处写注释-->
告诉以后的自己和共同开发的人修改什么或者逻辑关系

css的注释
/*在此写上注释*/

javascript的注释
//单行的注释


/*
多行的
注释
*/

如何写一个好注释
1. 注释首先要告诉维护的人这段代码是谁写的。

很多代码没有函数头注释，不知道是不屑写还是怕写。这不是一个好习惯，由于代码从开发到维护经常会换几拨人，新手未必能理解你当时的意图，这时能找人问一下是多么重要。将心比心，如果让你去维护一大块代码，看不懂又不知道问谁，估计也忍不住要破口大骂。

虽然现代的软件开发都是有版本控制，比较版本树能找到谁写的代码。但是，日积月累每个文件的版本节点数百个，从里面去找出某个函数，某处修改是数字写的也是很难得。

从我个人的理解，写代码不写函数头注释要么是太自信，要么是太不自信。


2. 注释不是描述代码做了什么而是描述为什么这么做。

如上面举例的，注释将代码做的事情用语言再描述一遍，其实是画蛇添足。维护的人或者看代码的人，最想知道的是为什么这么做，是为了解决什么特殊问题吗？有没有什么复杂的业务背景。至于怎么做，看代码就知道了。

当然，对于业务逻辑实在太复杂的部分。看代码不是能一下就看出个所以然来，通过一段文字说明，把关键点点出来，还是很有好处的。


3. 注释描述的内容应该和代码是一致的。

这个就不说了，做过软件开发的人都知道。修改代码时未同步修改注释，注释成了误导。需要说一下，错误的注释比没有注释更糟糕。


4. 函数头注释应该描述函数调用的前置条件和后置条件。

函数作为供其它函数调用的一个接口，需要有它的使用说明书。在什么场景下使用，使用后会产生什么样的后果，使用须知等。比如该函数的返回的指针需要调用方主动释放内存，如果调用方没有释放就导致内存泄露。


5. 取一个有意义的函数名，让它注释自己。

函数是一个功能单元，做一件事情。函数名最好能定义为动宾结构，最好能具体一点。比如校验用户名，校验密码可以是 CheckUserName、CheckPassword，而一个比较空泛的名称就不好理解，像 DoChecking 之类的。

开发过程中经常看到这样的情况：某个功能要处理 A、B、C 三件事，拆分成三个函数，函数名就是 DoA、DoB、DoC。只能说太随意了，还可以再斟酌一下。还可以做得更好。


6. 取一个好的变量名，让人不易误用。

见过字符串变量就直接定义叫 str，某个结构体量定义叫 st。或者有时候函数中的临时变量不知道定义什么名称，干脆叫 temp1、temp2、temp3……抓狂 T_T


7. 好的代码注释应该告诉后来人维护的思路。

维护过程中发现的好注释。代码注释不仅展示了作者清晰的思路，还将作者对后续可能的变化的思考也融入进来了。作者在写代码时已经考虑了后续版本的需求哪里可能会变化，变化后只要怎么修改一下哪里的代码就可以支持。这样的代码注释看起来很舒心，作者是有思想的，也是负责任的。